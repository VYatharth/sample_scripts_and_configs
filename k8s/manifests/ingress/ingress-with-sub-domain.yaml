apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: my-frontend-config
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: RESPONSE_CODE
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-name
  namespace: namespace-name
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.allow-http: "true"
    networking.gke.io/v1beta1.FrontendConfig: my-frontend-config
    ingress.gcp.kubernetes.io/pre-shared-cert: "cert-a,cert-b,cert-c"
    kubernetes.io/ingress.global-static-ip-name: helloweb-ip
spec:
  rules:
  - host: "subdomain-a.example.com"
      http:
        paths:
        - path: /*
          pathType: ImplementationSpecific
          backend:
            service:
              name: service-a
              port:
                number: 8080
  - host: "subdomain-b.example.com"
      http:
        paths:
        - path: /*
          pathType: ImplementationSpecific
          backend:
            service:
              name: service-b
              port:
                number: 80
  - host: "*.exmaple..com"
      http:
        paths:
        - path: /*
          pathType: ImplementationSpecific
          backend:
            service:
              name: service-c
              port:
                number: 8080
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: my-backendconfig
spec:
  sessionAffinity:
    affinityType: "GENERATED_COOKIE"  
    affinityCookieTtlSec: 50
---
apiVersion: v1
kind: Service
metadata:
  name: service-name
  namespace: namespace-name
  annotations:
  cloud.google.com/backend-config: '{"default": "my-backendconfig"}'
spec:
  type: NodePort
  selector:
    app: apache
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080